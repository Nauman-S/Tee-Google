// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Test, console} from "forge-std/Test.sol";
import {DKIMOracle} from "../contracts/DKIMOracle.sol";
import {CertManager} from "../contracts/CertManagerReduced.sol";
import {CertStorage} from "../contracts/CertStorage.sol";
import {CertParser} from "../contracts/CertParser.sol";
import {ICertManager} from "../contracts/ICertManager.sol";
import {DKIMRegistry} from "../contracts/DKIMRegistry.sol";


contract DKIMRegistryTest is Test {
    DKIMRegistry public dkimRegistry;
    DKIMOracle public dkimOracle;
    CertManager public certManager;
    CertStorage public certStorage;
    CertParser public certParser;

    function setUp() public {
        vm.warp(1742270400); // Set timestamp for certificate validity

        // Deploy split architecture
        certStorage = new CertStorage();
        certParser = new CertParser();
        certManager = new CertManager(certStorage, certParser);
        dkimOracle = new DKIMOracle(ICertManager(address(certManager)));
        dkimRegistry = new DKIMRegistry(dkimOracle);
    }

    //forge test --match-test test_storeDKIMKeysFromAttestation
    function test_storeDKIMKeysFromAttestation() public {
        // Use a valid attestation payload (simplified for testing)
        bytes memory attestation = hex"8444a1013822a0591695a96a7075626c69635f6b65795820a50e40712bb86c7891fd3e17e11bcbeec67710e073a94cf36c2fd8e6bec7a360696d6f64756c655f69647827692d30313862363464323961356462633638342d656e63303139356137336537623933633237366974696d657374616d701b00000195a74778db6470637273b00a58300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e5830000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055830000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045830e9d74e886878e6c844581e716a67f0aae9ce87113ffec8da39f17685cd23b11eb02e2084678c73f7571cbd9df99aeb080658300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000758300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000958300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b58300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d58300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000258300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f58300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000158300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000358300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000858300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c58300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000058300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006b6365727469666963617465590289308202853082020ba00302010202100195a73e7b93c2760000000067d8e749300a06082a8648ce3d040303308193310b30090603550406130255533113301106035504080c0a57617368696e67746f6e3110300e06035504070c0753656174746c65310f300d060355040a0c06416d617a6f6e310c300a060355040b0c03415753313e303c06035504030c35692d30313862363464323961356462633638342e61702d6e6f727468656173742d312e6177732e6e6974726f2d656e636c61766573301e170d3235303331383033323335305a170d3235303331383036323335335a308198310b30090603550406130255533113301106035504080c0a57617368696e67746f6e3110300e06035504070c0753656174746c65310f300d060355040a0c06416d617a6f6e310c300a060355040b0c034157533143304106035504030c3a692d30313862363464323961356462633638342d656e63303139356137336537623933633237362e61702d6e6f727468656173742d312e6177733076301006072a8648ce3d020106052b81040022036200049b0351d7766e120dc1b18b110c2adb5601031f54be50c145c03246f9656f848c9e45c3612e2e6dcb12f07f35d6ff4af494424d66926c13436e9028f1a07f56db7b01e1c5fec13458dfcd9bb461acb1e5e1e984fc1f6a1c95e1b11118cc142cd8a31d301b300c0603551d130101ff04023000300b0603551d0f0404030206c0300a06082a8648ce3d040303036800306502307d31924d780a0f75381c22f01d28196edff8dd0a8670915b69d24ccee00deda256f953d9443cbe555ea400d7013e23e0023100e977a6d40bed71e2cfd4a2ba602d282db0d158bc20d2a5e34ec832dfed3036d8771fff169633a8e5c241de3bd11b884a68636162756e646c65845902153082021130820196a003020102021100f93175681b90afe11d46ccb4e4e7f856300a06082a8648ce3d0403033049310b3009060355040613025553310f300d060355040a0c06416d617a6f6e310c300a060355040b0c03415753311b301906035504030c126177732e6e6974726f2d656e636c61766573301e170d3139313032383133323830355a170d3439313032383134323830355a3049310b3009060355040613025553310f300d060355040a0c06416d617a6f6e310c300a060355040b0c03415753311b301906035504030c126177732e6e6974726f2d656e636c617665733076301006072a8648ce3d020106052b8104002203620004fc0254eba608c1f36870e29ada90be46383292736e894bfff672d989444b5051e534a4b1f6dbe3c0bc581a32b7b176070ede12d69a3fea211b66e752cf7dd1dd095f6f1370f4170843d9dc100121e4cf63012809664487c9796284304dc53ff4a3423040300f0603551d130101ff040530030101ff301d0603551d0e041604149025b50dd90547e796c396fa729dcf99a9df4b96300e0603551d0f0101ff040403020186300a06082a8648ce3d0403030369003066023100a37f2f91a1c9bd5ee7b8627c1698d255038e1f0343f95b63a9628c3d39809545a11ebcbf2e3b55d8aeee71b4c3d6adf3023100a2f39b1605b27028a5dd4ba069b5016e65b4fbde8fe0061d6a53197f9cdaf5d943bc61fc2beb03cb6fee8d2302f3dff65902c7308202c33082024aa003020102021100e7012c675b6b1d70bd86ef83db397b08300a06082a8648ce3d0403033049310b3009060355040613025553310f300d060355040a0c06416d617a6f6e310c300a060355040b0c03415753311b301906035504030c126177732e6e6974726f2d656e636c61766573301e170d3235303331323230323334365a170d3235303430313231323334365a3069310b3009060355040613025553310f300d060355040a0c06416d617a6f6e310c300a060355040b0c03415753313b303906035504030c32656434353762356664383732653339332e61702d6e6f727468656173742d312e6177732e6e6974726f2d656e636c617665733076301006072a8648ce3d020106052b8104002203620004d129350c203e85862c7a79aeba08a4ff58b1c68ddd6f8932ed49f567b39a88fc5e0f3f0c3e8425ab7a556e21b5a720590f857b067d6d65dae7087a1bef530ca0ce55b2d1111531ef78c42503cd2cdac2fac5a21a2271be20e48077ca9b375ddda381d53081d230120603551d130101ff040830060101ff020102301f0603551d230418301680149025b50dd90547e796c396fa729dcf99a9df4b96301d0603551d0e04160414507b4f68c65d727407a0a081054aa700cf01f0c3300e0603551d0f0101ff040403020186306c0603551d1f046530633061a05fa05d865b687474703a2f2f6177732d6e6974726f2d656e636c617665732d63726c2e73332e616d617a6f6e6177732e636f6d2f63726c2f61623439363063632d376436332d343262642d396539662d3539333338636236376638342e63726c300a06082a8648ce3d040303036700306402307c9163eec6c4d46b9f970359b420960b9bc9e133f898432bd61e66b12b3ddf82dab6af529fd12d498eb2d10bb78105080230331702a9506e222ce7e80ef4c41cfccad8702fbfe714e56d06a9a651ab79a3bca4d35e697ef42a97ea5cc2952e0c493159032e3082032a308202b1a003020102021100882a2912c6ac5ed0f9a74c7de23e4a14300a06082a8648ce3d0403033069310b3009060355040613025553310f300d060355040a0c06416d617a6f6e310c300a060355040b0c03415753313b303906035504030c32656434353762356664383732653339332e61702d6e6f727468656173742d312e6177732e6e6974726f2d656e636c61766573301e170d3235303331373038323132315a170d3235303332333033323132315a30818e3141303f06035504030c38333461333862383566643066656637312e7a6f6e616c2e61702d6e6f727468656173742d312e6177732e6e6974726f2d656e636c61766573310c300a060355040b0c03415753310f300d060355040a0c06416d617a6f6e310b3009060355040613025553310b300906035504080c0257413110300e06035504070c0753656174746c653076301006072a8648ce3d020106052b8104002203620004e25bd6e66b64b55fee87f9fc3ebfbc0c1220c636c25a4f9af6ecb908488e6c35a3099a3ed349c27a7939da8aa8fd6e170f664ce7d1a14e74300e177addd97e07d851b01561b6b57efa29e85c9f388142cc261bb959692ff91a01922eedf166fea381f63081f330120603551d130101ff040830060101ff020101301f0603551d23041830168014507b4f68c65d727407a0a081054aa700cf01f0c3301d0603551d0e041604140e6d9fd822e74a0b3ae9723f6a89bb42e3771ee5300e0603551d0f0101ff04040302018630818c0603551d1f048184308181307fa07da07b8679687474703a2f2f63726c2d61702d6e6f727468656173742d312d6177732d6e6974726f2d656e636c617665732e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f63726c2f62613263353134312d663962372d346361662d623761372d6564366564623835393161392e63726c300a06082a8648ce3d040303036700306402301cefa0d1f7f721603fb9eb24455000c620d378f700f6a5373bcae315a7292f334a403d60cf54c68877421d37bc4dd77d02307984b8d0c6378d1158b31804f22998433c993e40aca27b31742c0dbadc4608d8b340f0b89c50ce0b205220fe722771e85902cd308202c93082024fa00302010202150092bf0bbf3e7ba1376abdeaa1bcaa51702089443e300a06082a8648ce3d04030330818e3141303f06035504030c38333461333862383566643066656637312e7a6f6e616c2e61702d6e6f727468656173742d312e6177732e6e6974726f2d656e636c61766573310c300a060355040b0c03415753310f300d060355040a0c06416d617a6f6e310b3009060355040613025553310b300906035504080c0257413110300e06035504070c0753656174746c65301e170d3235303331373137323733365a170d3235303331383137323733365a308193310b30090603550406130255533113301106035504080c0a57617368696e67746f6e3110300e06035504070c0753656174746c65310f300d060355040a0c06416d617a6f6e310c300a060355040b0c03415753313e303c06035504030c35692d30313862363464323961356462633638342e61702d6e6f727468656173742d312e6177732e6e6974726f2d656e636c617665733076301006072a8648ce3d020106052b81040022036200049015357243efdaea064ad6965eb313e7d7cab65002406695b729f880f61c86d268bcbb28263ca9a5af020a9ded3fcdb57c65a6207ba514d73809ae1015ac48514db08635d5c36ee09bfda2de87449c9bb461b6e3455783090606bad44a6267d8a366306430120603551d130101ff040830060101ff020100300e0603551d0f0101ff040403020204301d0603551d0e0416041437cc06e97d3a0fda1e7689fae5ce087cd0939a79301f0603551d230418301680140e6d9fd822e74a0b3ae9723f6a89bb42e3771ee5300a06082a8648ce3d040303036800306502303f4f3ea8dd4af8bc06a6b69d62c86eaaa8eb0080ef6fc62cf8b31c80eb6e9d4909f0aca3e693f3eab84b89de53589c41023100fea17988357704e3c9d74ae13d118678071500b397bda0bbc528401f258a11fe6151d76813893a8116d26808d9666f1d666469676573746653484133383469757365725f646174615905417b2270726f7669646572223a22676f6f676c65222c226a776b735f6b657973223a7b2231343939633135346363633861323565323464386465386231613966383435616566623666336361223a224d494942496a414e42676b71686b6947397730424151454641414f43415138414d49494243674b43415145417448357064576f6a6761675937334879325774483876686f4b7047416d50303145314353755a6e2b3032552f68546a467a416f44416954366437436350313456486734414752575938324e437735484c3976617058696c5230593167336c465777524355316f586a41707a686b5474335256624d2b6a505772356145432f514e3679544539714b316c777a312f78303372504d4f7553503742634451434e617a504c50774944784d747a54343761734832354f7274694e2b6e46412f696d4d414d72714b4542686d5974757447714b7168733676492f50734e48784c46795232365a2b4367477251323145656e7375306a6c3239766c30755942665655473458707a4f703741352f72775650614878355a6962555356472b6556753052594f62534b4a54585167384e4b7333624555486b395a35363350675441396d6635567376656e4e6d364478434a72767a74784b766867314e77494441514142222c2239386463353563386232303933363361323435313737346263653563343237313864313363623764223a224d494942496a414e42676b71686b6947397730424151454641414f43415138414d49494243674b434151454171343466645a6c79386c6c474577524f53686c386364547a3955485834712b727159673478744c674d654d77347673494264324f6f6a504d4261343948564c71456444624f7541543477736663594345534742766b507347705749563958725a596f4b664e68682b4e467867465471532b5261666e655965352f363133473671335a434f6b336b4d63707178656a37704a32395279774342356166515064646e4638705a61392f42672f35544364634c47357938346e5630534c6858665a3061414d4d505674343035564a435663696c477776507064646d486671326d333751346742696c6f646a586e6166513669797343556449397154645433655734687a695955417946366e4b7442636d7a7764415545472f7947784a4a55464849667457542f636c6a5634707a416a737a6b4f694d4f614f554775524476676e2f387154526f32786b77755135796f4b3748657059547a4a51494441514142227d2c22646b696d5f6b657973223a7b22676d61696c2e636f6d223a7b223230323330363031223a224d494942496a414e42676b71686b6947397730424151454641414f43415138414d49494243674b43415145416e7476534b5431686b71684b65307863615a30782b51626f7544734a75426662792f5338326a78736f432f536f646d666d56733244314b4148336d69314171644d64553132683256664554654f4a6b67475971356c6a64393936414a3775643253794f4c516d6c68614e4848374c782b4d646162382f7a444e315364785041524467634d374173524543487751313552323046614b5541424775344e5462523266444b6e59776971356a5179426b4c57502b4c67474f67665546345434485a62325059326251744550365165714f746357347272734832344c375868442b48535a623168736974724530565062684a7a78447749344a46383135584d6e53566a5a675955585038437849315930464f4e6c7174515967736f725a3961706f57314b50516538627253536c527369397358422f747535364c6d47377445444e6d725a35585577515955554144424f753774316e69775877494441514142227d7d7d656e6f6e63654334353658603623821f398492033bb774aeacc0c5f3d1e3f2d57953c45748cde03426d2290fa0f3b96805ff1c8d0deb540231030f0a3416cfcb3f88b6fb7e156edbb95a674eece6e6d425e0b87d8eb7d6b79601e3c7bcceb2dece8bbb1bd49a010e745687ce";

        dkimRegistry.storeDKIMKeysFromAttestation(attestation);

        (string[] memory domains, string[] memory selectors, bytes[] memory publicKeys) = dkimRegistry.getAllDKIMKeys();

        assertEq(domains.length, 1, "Should have 1 domain");
        assertEq(selectors.length, 1, "Should have 1 selector");
        assertEq(publicKeys.length, 1, "Should have 1 public key");
        
        assertEq(domains[0], "gmail.com", "Domain should be gmail.com");
        assertEq(selectors[0], "20230601", "Selector should be 20230601");
        assertTrue(publicKeys[0].length > 0, "Public key should not be empty");

        console.log("Successfully stored DKIM keys from attestation");
    }
}